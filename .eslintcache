[{"/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/index.tsx":"1","/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/reportWebVitals.ts":"2","/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/Navigation.tsx":"3","/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/views/pages/Modal.tsx":"4","/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/api/index.ts":"5","/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/api/data_handler.ts":"6","/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/api/pseudo_handler.ts":"7","/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/views/pages/Home.jsx":"8","/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/views/pages/Find.jsx":"9","/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/App.jsx":"10","/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/App.tsx":"11"},{"size":668,"mtime":1610421817519,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1608787931685,"results":"14","hashOfConfig":"13"},{"size":581,"mtime":1608787931764,"results":"15","hashOfConfig":"13"},{"size":957,"mtime":1609808382874,"results":"16","hashOfConfig":"17"},{"size":1986,"mtime":1608787931541,"results":"18","hashOfConfig":"13"},{"size":2630,"mtime":1608791606687,"results":"19","hashOfConfig":"13"},{"size":1706,"mtime":1608787931541,"results":"20","hashOfConfig":"13"},{"size":2622,"mtime":1610505896987,"results":"21","hashOfConfig":"13"},{"size":3215,"mtime":1610589951906,"results":"22","hashOfConfig":"13"},{"size":5163,"mtime":1610590386428,"results":"23","hashOfConfig":"13"},{"size":562,"mtime":1610074406141,"results":"24","hashOfConfig":"13"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12jxkjr",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},"11jbyhz",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/index.tsx",[],"/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/reportWebVitals.ts",[],"/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/Navigation.tsx",["54"],"/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/views/pages/Modal.tsx",["55","56","57"],"import React from 'react';\nimport cat from '../../img/cat.png';\nimport star from '../../img/star.svg';\nimport close from '../../img/ico_close.svg';\nimport '../../style/App.scss';\n\nfunction Modal() {\n  return (\n    <div className=\"home-content\">\n      <div id=\"overlay\">\n        <div className=\"home-modal\">\n          <div className=\"home-modal--back\">\n            <img src={close} />\n          </div>\n          <div className=\"home-modal--img\">\n            <img className=\"home-modal--cat\" src={cat} />\n          </div>\n          <div className=\"home-modal--button\">\n            <div className=\"home-modal--icon\">\n              <div className=\"home-modal--favoritebutton\">\n                <img className=\"home-modal--favoriteimg\" src={star} />\n                <div className=\"home-modal--text\">お気に入りに追加する</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Modal;\n",["58","59"],"/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/api/index.ts",["60"],"import DataHandler from \"./data_handler\";\nimport PseudoHandler, { Data } from \"./pseudo_handler\";\n\nconst CAT_API_PATH = \"https://cataas.com/cat\";\nconst IMAGE_PREFIX = \"data:image/jpeg;base64, \";\n\n/**\n * Get a single cat image from Web.\n *\n * Require `await` keyword to call\n *   b/c this costs secs for data transfer.\n */\nexport const getCatImage = async () => {\n  const cat = new DataHandler(CAT_API_PATH);\n\n  const srcBase64 = await cat.getAsBase64();\n\n  return IMAGE_PREFIX + srcBase64;\n};\n\n/**\n * Get multiple cat images from Web.\n * Search target could be specified the second parameter.\n *\n * Require `await` keyword to call\n *   b/c this costs secs for data transfer.\n *\n * @param amount The amount of cat images to get.\n * @param keyword Optional parameter to specify cat genre like tag.\n */\nexport const getCatImagesWithKeyword = async (amount: number, keyword = \"\") => {\n  const cat = keyword\n    ? new DataHandler(`${CAT_API_PATH}/${keyword}`)\n    : new DataHandler(`${CAT_API_PATH}`);\n\n  const images = await Promise.all(\n    [...Array(amount)].map(async () => {\n      return IMAGE_PREFIX + (await cat.getAsBase64());\n    })\n  ).catch(() => \"\");\n\n  return images;\n};\n\n/**\n * Save user cat data to Storage.\n * Data to be saved should be Array<CatStrInfo>\n *\n * CatStrInfo = {\n *   image: cat image\n *   date: Date\n * }\n *\n * Require `await` keyword to call\n *   b/c this costs secs for data transfer.\n *\n * @param data data to be saved.\n */\nexport const saveCatData = async (data: Data) => {\n  const saver = new PseudoHandler(\"./data/save\");\n\n  const result = await saver.post(data);\n\n  return result;\n};\n\n/**\n * Load user cat data from Storage.\n *\n * Require `await` keyword to call\n *   b/c this costs secs for data transfer.\n */\nexport const loadCatData = async () => {\n  const loader = new PseudoHandler(\"./data/load\");\n\n  const result = await loader.get();\n\n  return result;\n};\n\nexport default {\n  getCatImage,\n  getCatImagesWithKeyword,\n  saveCatData,\n  loadCatData\n};\n",["61","62"],"/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/api/data_handler.ts",[],"/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/api/pseudo_handler.ts",[],"/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/views/pages/Home.jsx",["63","64","65"],"import { React, useState, useEffect } from 'react';\nimport '../../style/App.scss';\nimport star from '../../img/star.svg';\nimport API from '../../api'\n\nfunction FavoriteList(props) {\n  const favoriteCatList = !props.catInfo\n    ? []\n    : props.catInfo.map((cat) => <FavoriteItem cat={cat} openModal={props.openModal}/>)\n\n  return (\n    <div className=\"home-favorite--list\">\n      {favoriteCatList}\n    </div>\n  )\n}\n\nfunction FavoriteItem(props) {\n  const cat = props.cat;\n\n  const formattedDate = formatDate(cat.date);\n\n  return (\n    <div className=\"home-favorite--icon\" onClick={() => { props.openModal(cat) }}>\n      <img className=\"home-favorite--img\" src={cat.image} />\n      <div className=\"home-favorite--day\">\t\n        {formattedDate}\n      </div>\n    </div >\n  )\n}\n\nfunction RecommendItem(props) {\n  const cat = {\n    image: props.catImage,\n    date: undefined\n  }\n\n  return (\n    <div className=\"home-recommend--icon\" onClick={() => { props.openModal(cat) }}>\n      <img className=\"home-recommend--img\" src={cat.image} />\n      <div className=\"home-recommend--button\">\n        <img className=\"home-recommend--svg\" src={star} />\n      </div>\n    </div>\n  )\n}\n\nfunction formatDate(date) {\n  const year = date.getFullYear();\n  const month = date.getMonth() + 1;\n  const day = date.getDate();\n  const hours = date.getHours();\n  const minutes =date.getMinutes();\n\n  return `${year}/${month}/${day} ${hours}:${minutes}`\n}\n\nfunction Home(props) {\n  const [recommendationImage, setRecommendationImage] = useState('');\n  const [catInfo, setCatInfo] = useState(undefined);\n\n  async function getCatImage() {\n    const image = await API.getCatImage();\n    setRecommendationImage(image);\n  }\n\n  async function loadCatData() {\n    const catInfo = await API.loadCatData();\n    setCatInfo(catInfo);\n  }\n\n  useEffect(() => {\n    getCatImage()\n    loadCatData()\n  }, []);\n\n  return (\n    <div className=\"home-main\">\n      <div className=\"home-content\">\n        <div className=\"home-main--title\">\n          ホーム\n        </div>\n        <div className=\"home-recommend\">\n          <div className=\"home-recommend--title\">\n            本日のおすすめ\n          </div>\n          <RecommendItem\n            catImage={recommendationImage}\n            openModal={props.openModal}\n          />\n        </div>\n        <div className=\"home-favorite\">\n          <div className=\"home-favorite--title\">\n            あなたのお気に入り\n          </div>\n          <FavoriteList\n            catInfo={catInfo}\n            openModal={props.openModal}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n",["66","67"],"/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/views/pages/Find.jsx",["68","69","70","71","72"],"import { React, useState, useEffect } from 'react';\nimport serch from '../../img/serch.svg';\nimport '../../style/App.scss';\nimport star from '../../img/star.svg';\nimport API from '../../api'\n\nfunction FindList(props) {\n      console.log(props.favoriteList);\n  const searchCatList = !props.searchCat\n  ? []\n    : props.searchCat.map((catList, idx) => <SearchItem catList={catList} openModal={props.openModal} idx={idx} favoriteList={props.favoriteList}/>)\n  \n  return (\n    <div className=\"find-list\">\n      {!props.searchCat\n        ? (\n          <div className=\"find-list--cat\">\n            <img className=\"find-list--img\" src={serch} />\n            <div className=\"find-list--text\">\n              あなたの気に入るねこを探してみよう\n            </div>\n          </div>\n        )\n        : (\n          <div>\n            <div className=\"find-list--keyword\">\n              {props.searchText\n                ? (\n                  'キーワード:' + props.searchText\n                  )\n                  : (\n                  'キーワード:なし'\n                )\n              }\n            </div>\n            <div className=\"find-list--search\">\n              {searchCatList}\n            </div>\n          </div>\n        )\n      }\n    </div>\n  )\n}\n  \nfunction SearchItem(props) {\n    console.log(props.favoriteList[1]);\n  console.log(props.idx, props.favoriteList[(props.idx)]);\n  // console.log(props.catList);\n  const cat = {\n    image: props.catList,\n    date: undefined,\n    idx: props.idx\n  }\n\n  return (\n    <div className=\"home-search--icon\" onClick={() => { props.openModal(cat) }}>\n      <img className=\"home-recommend--img\" src={cat.image} />\n      {props.searchText\n        ? (\n          <div className=\"home-recommend--button\">\n            <img className=\"home-recommend--svg\" src={star} />\n          </div>\n        )\n        : (\n          <div className=\"home-recommend--button\">\n            <img className=\"home-recommend--svg\" src={star} />\n          </div>\n        )\n      }\n    </div>\n  )\n}\n\nfunction Find(props) {\n  const [searchCat, setSearchCat] = useState(undefined);\n  const [searchText, setSearchText] = useState('');\n  // const [modalCat, setModalCat] = useState({});\n\n  async function getCatImagesWithKeyword() {\n    const getSearchCat = await API.getCatImagesWithKeyword(10, searchText);\n    setSearchCat(getSearchCat);\n  }\n\n  function changeText(event) {\n    setSearchText(event.target.value);\n    console.log(event.target.value)\n  }\n\n  return (\n    <div className=\"find-main\">\n      <div className=\"find-content\">\n        <div className=\"find-main--title\">\n          ねこをさがす\n        </div>\n        <div className=\"find-serch\">\n          <input className=\"find-serch--input\" placeholder=\"キーワード\" onChange={changeText} />\n          <button className=\"find-serch--button\" onClick={getCatImagesWithKeyword} >さがす</button>\n        </div>\n        <div className=\"find-line\" />\n        <FindList\n          searchCat={searchCat}\n          searchText={searchText}\n          openModal={props.openModal}\n          closeModal={props.closeModal}\n          favoriteList={props.favoriteList}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Find;\n","/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/App.jsx",["73","74","75","76"],"/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/App.tsx",["77"],{"ruleId":"78","severity":1,"message":"79","line":3,"column":19,"nodeType":"80","messageId":"81","endLine":3,"endColumn":23},{"ruleId":"82","severity":1,"message":"83","line":13,"column":13,"nodeType":"84","endLine":13,"endColumn":32},{"ruleId":"82","severity":1,"message":"83","line":16,"column":13,"nodeType":"84","endLine":16,"endColumn":58},{"ruleId":"82","severity":1,"message":"83","line":21,"column":17,"nodeType":"84","endLine":21,"endColumn":71},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":81,"column":1,"nodeType":"91","endLine":86,"endColumn":3},{"ruleId":"85","replacedBy":"92"},{"ruleId":"87","replacedBy":"93"},{"ruleId":"82","severity":1,"message":"83","line":25,"column":7,"nodeType":"84","endLine":25,"endColumn":61},{"ruleId":"82","severity":1,"message":"83","line":41,"column":7,"nodeType":"84","endLine":41,"endColumn":62},{"ruleId":"82","severity":1,"message":"83","line":43,"column":9,"nodeType":"84","endLine":43,"endColumn":59},{"ruleId":"85","replacedBy":"92"},{"ruleId":"87","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":1,"column":27,"nodeType":"80","messageId":"81","endLine":1,"endColumn":36},{"ruleId":"82","severity":1,"message":"83","line":18,"column":13,"nodeType":"84","endLine":18,"endColumn":59},{"ruleId":"82","severity":1,"message":"83","line":58,"column":7,"nodeType":"84","endLine":58,"endColumn":62},{"ruleId":"82","severity":1,"message":"83","line":62,"column":13,"nodeType":"84","endLine":62,"endColumn":63},{"ruleId":"82","severity":1,"message":"83","line":67,"column":13,"nodeType":"84","endLine":67,"endColumn":63},{"ruleId":"82","severity":1,"message":"83","line":61,"column":19,"nodeType":"84","endLine":61,"endColumn":73},{"ruleId":"82","severity":1,"message":"83","line":72,"column":17,"nodeType":"84","endLine":72,"endColumn":71},{"ruleId":"82","severity":1,"message":"83","line":168,"column":11,"nodeType":"84","endLine":168,"endColumn":30},{"ruleId":"82","severity":1,"message":"83","line":171,"column":11,"nodeType":"84","endLine":171,"endColumn":67},{"ruleId":"78","severity":1,"message":"96","line":6,"column":8,"nodeType":"80","messageId":"81","endLine":6,"endColumn":13},"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["97"],"no-negated-in-lhs",["98"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["97"],["98"],"no-unused-vars","'useEffect' is defined but never used.","'Modal' is defined but never used.","no-global-assign","no-unsafe-negation"]