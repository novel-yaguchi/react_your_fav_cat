[{"/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/index.tsx":"1","/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/reportWebVitals.ts":"2","/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/Navigation.tsx":"3","/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/views/pages/Modal.tsx":"4","/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/api/index.ts":"5","/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/api/data_handler.ts":"6","/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/api/pseudo_handler.ts":"7","/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/views/pages/Home.jsx":"8","/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/views/pages/Find.jsx":"9","/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/App.jsx":"10","/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/App.tsx":"11"},{"size":664,"mtime":1609748337072,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1608787931685,"results":"14","hashOfConfig":"13"},{"size":581,"mtime":1608787931764,"results":"15","hashOfConfig":"13"},{"size":957,"mtime":1609808382874,"results":"16","hashOfConfig":"13"},{"size":1986,"mtime":1608787931541,"results":"17","hashOfConfig":"13"},{"size":2630,"mtime":1608791606687,"results":"18","hashOfConfig":"13"},{"size":1706,"mtime":1608787931541,"results":"19","hashOfConfig":"13"},{"size":5857,"mtime":1610075651692,"results":"20","hashOfConfig":"13"},{"size":5922,"mtime":1610074406143,"results":"21","hashOfConfig":"13"},{"size":4260,"mtime":1610075556606,"results":"22","hashOfConfig":"13"},{"size":562,"mtime":1610074406141,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"11jbyhz",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":4,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"47"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"26"},"/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/index.tsx",[],["56","57"],"/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/reportWebVitals.ts",[],"/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/Navigation.tsx",["58"],"import React from 'react';\nimport './style/App.scss';\nimport { NavLink, Link } from 'react-router-dom';\n\n\nfunction Navigation()  {\n  return (\n    <div className=\"navigator-main\">\n      <div className=\"navigator-title\">\n        <p >Your Fav Cats</p>\n      </div>\n      <div className=\"navigator-menu\">\n        <NavLink className=\"navigator-menu--link navigator-menu--item\" exact to=\"/\">ホーム</NavLink>\n        <NavLink className=\"navigator-menu--link navigator-menu--item\" exact to=\"/find\">ねこをさがす</NavLink>\n      </div>\n    </div>\n  );\n}\n\nexport default Navigation;\n","/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/views/pages/Modal.tsx",["59","60","61"],"import React from 'react';\nimport cat from '../../img/cat.png';\nimport star from '../../img/star.svg';\nimport close from '../../img/ico_close.svg';\nimport '../../style/App.scss';\n\nfunction Modal() {\n  return (\n    <div className=\"home-content\">\n      <div id=\"overlay\">\n        <div className=\"home-modal\">\n          <div className=\"home-modal--back\">\n            <img src={close} />\n          </div>\n          <div className=\"home-modal--img\">\n            <img className=\"home-modal--cat\" src={cat} />\n          </div>\n          <div className=\"home-modal--button\">\n            <div className=\"home-modal--icon\">\n              <div className=\"home-modal--favoritebutton\">\n                <img className=\"home-modal--favoriteimg\" src={star} />\n                <div className=\"home-modal--text\">お気に入りに追加する</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Modal;\n",["62","63"],"/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/api/index.ts",["64"],"import DataHandler from \"./data_handler\";\nimport PseudoHandler, { Data } from \"./pseudo_handler\";\n\nconst CAT_API_PATH = \"https://cataas.com/cat\";\nconst IMAGE_PREFIX = \"data:image/jpeg;base64, \";\n\n/**\n * Get a single cat image from Web.\n *\n * Require `await` keyword to call\n *   b/c this costs secs for data transfer.\n */\nexport const getCatImage = async () => {\n  const cat = new DataHandler(CAT_API_PATH);\n\n  const srcBase64 = await cat.getAsBase64();\n\n  return IMAGE_PREFIX + srcBase64;\n};\n\n/**\n * Get multiple cat images from Web.\n * Search target could be specified the second parameter.\n *\n * Require `await` keyword to call\n *   b/c this costs secs for data transfer.\n *\n * @param amount The amount of cat images to get.\n * @param keyword Optional parameter to specify cat genre like tag.\n */\nexport const getCatImagesWithKeyword = async (amount: number, keyword = \"\") => {\n  const cat = keyword\n    ? new DataHandler(`${CAT_API_PATH}/${keyword}`)\n    : new DataHandler(`${CAT_API_PATH}`);\n\n  const images = await Promise.all(\n    [...Array(amount)].map(async () => {\n      return IMAGE_PREFIX + (await cat.getAsBase64());\n    })\n  ).catch(() => \"\");\n\n  return images;\n};\n\n/**\n * Save user cat data to Storage.\n * Data to be saved should be Array<CatStrInfo>\n *\n * CatStrInfo = {\n *   image: cat image\n *   date: Date\n * }\n *\n * Require `await` keyword to call\n *   b/c this costs secs for data transfer.\n *\n * @param data data to be saved.\n */\nexport const saveCatData = async (data: Data) => {\n  const saver = new PseudoHandler(\"./data/save\");\n\n  const result = await saver.post(data);\n\n  return result;\n};\n\n/**\n * Load user cat data from Storage.\n *\n * Require `await` keyword to call\n *   b/c this costs secs for data transfer.\n */\nexport const loadCatData = async () => {\n  const loader = new PseudoHandler(\"./data/load\");\n\n  const result = await loader.get();\n\n  return result;\n};\n\nexport default {\n  getCatImage,\n  getCatImagesWithKeyword,\n  saveCatData,\n  loadCatData\n};\n","/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/api/data_handler.ts",[],"/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/api/pseudo_handler.ts",[],["65","66"],"/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/views/pages/Home.jsx",["67","68","69","70","71","72","73","74","75","76","77"],"import { React, useState, useEffect } from 'react';\nimport '../../style/App.scss';\nimport Modal from 'react-modal';\nimport close from '../../img/ico_close.svg';\nimport star from '../../img/star.svg';\nimport API from '../../api'\n\n\nconst customStyles = {\n  content: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    padding: '40px',\n    marginRight: '-50%',\n    height: '80%',\n    width: '64%',\n    transform: 'translate(-50%, -50%)',\n  },\n  overlay: {\n    backgroundColor: \"rgba(0,0,0,0.5)\"\n  }\n};\n\nfunction FavoriteList(props) {\n  const favoriteCatList = !props.catInfo\n    ? []\n    : props.catInfo.map((cat) => <FavoriteItem cat={cat} openModal={props.openModal}/>)\n\n  return (\n    <div className=\"home-favorite--list\">\n      {favoriteCatList}\n    </div>\n  )\n}\n\nfunction FavoriteItem(props) {\n  const cat = props.cat;\n\n  const formattedDate = formatDate(cat.date);\n\n  return (\n    <div className=\"home-favorite--icon\" onClick={() => { props.openModal(cat) }}>\n      <img className=\"home-favorite--img\" src={cat.image} />\n      <div className=\"home-favorite--day\">\t\n        {formattedDate}\n      </div>\n    </div >\n  )\n}\n\nfunction RecommendItem(props) {\n  const cat = {\n    image: props.catImage,\n    date: undefined\n  }\n\n  return (\n    <div className=\"home-recommend--icon\" onClick={() => { props.openModal(cat) }}>\n      <img className=\"home-recommend--img\" src={cat.image} />\n      <div className=\"home-recommend--button\">\n        <img className=\"home-recommend--svg\" src={star} />\n      </div>\n    </div>\n  )\n}\n\nfunction formatDate(date) {\n  const year = date.getFullYear();\n  const month = date.getMonth() + 1;\n  const day = date.getDate();\n  const hours = date.getHours();\n  const minutes =date.getMinutes();\n\n  return `${year}/${month}/${day} ${hours}:${minutes}`\n}\n\nfunction ModalItem(props) {\n  const cat = props.cat\n  return (\n    <div className=\"home-modal--item\">\n      {cat.date\n        ? (\n          <>\n            <div className=\"home-modal--favorite\">\n              <div className=\"home-modal--favorite--text\">\n                お気に入り登録日\n                    </div>\n              <div className=\"home-modal--favorite--date\">\n                { formatDate(cat.date)}\n              </div>\n            </div>\n            <div className=\"home-modal--button\" onClick={props.removeFavorite}>\n              <div className=\"home-modal--icon\">\n                <div className=\"home-modal--removebutton\">\n                  <img className=\"home-modal--favoriteimg\" src={star} />\n                  <div className=\"home-modal--text\" >お気に入りからはずす</div>\n                </div>\n              </div>\n            </div>\n          </>\n        )\n        : (\n          <div className=\"home-modal--button\" onClick={props.saveFavorite}>\n            <div className=\"home-modal--icon\">\n              <div className=\"home-modal--favoritebutton\">\n                <img className=\"home-modal--favoriteimg\" src={star} />\n                <div className=\"home-modal--text\" >お気に入りに追加する</div>\n              </div>\n            </div> \n          </div>\n        )\n      }\n    </div>\n  )\n}\n\nfunction Home(props) {\n  const [recommendationImage, setRecommendationImage] = useState('');\n  const [catInfo, setCatInfo] = useState(undefined);\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [modalCat, setModalCat] = useState({});\n\n  async function getCatImage() {\n    const image = await API.getCatImage();\n    setRecommendationImage(image);\n  }\n\n  async function loadCatData() {\n    const catInfo = await API.loadCatData();\n    setCatInfo(catInfo);\n  }\n\n  useEffect(() => {\n    getCatImage()\n    loadCatData()\n  }, []);\n\n\n  function openModal(cat) {\n    setIsOpen(true);\n    setModalCat(cat);\n  }\n\n  // function closeModal() {\n  //   setIsOpen(false);\n  //   setModalCat({});\n  // }\n\n  function saveFavorite() {\n\n    if (!catInfo) {\n      return;\n    };\n    console.log(\"お気に入り追加\")\n    const newCatInfo = catInfo.concat([{\n      image: recommendationImage,\n      date: new Date()\n    }])\n\n    setCatInfo(newCatInfo);\n\n    API.saveCatData(newCatInfo);\n\n    closeModal();\n  }\n\n  function removeFavorite() {\n    const cat = {\n      date: modalCat.date\n    }\n\n    const filtered_cat = catInfo.filter(v => v.date.getTime() !== cat.date.getTime());\n    \n    setCatInfo(filtered_cat);\n\n    API.saveCatData(filtered_cat);\n\n    closeModal();\n  }\n\n  return (\n    <div className=\"home-main\">\n      <div>\n        <Modal\n          isOpen={modalIsOpen}\n          onRequestClose={closeModal}\n          style={customStyles}\n          contentLabel=\"Example Modal\"\n        >\n          <div className=\"home-modal--back\" onClick={closeModal}>\n            <img src={close} />\n          </div>\n          <div className=\"home-modal--img\">\n            <img className=\"home-modal--cat\" src={modalCat.image} />\n          </div>\n          <ModalItem\n            saveFavorite={saveFavorite}\n            removeFavorite={removeFavorite}\n            closeModal={props.closeModal}\n            cat={modalCat}\n          />\n        </Modal>\n      </div>\n\n      <div className=\"home-content\">\n        <div className=\"home-main--title\">\n          ホーム\n        </div>\n        <div className=\"home-recommend\">\n          <div className=\"home-recommend--title\">\n            本日のおすすめ\n          </div>\n          <RecommendItem\n            catImage={recommendationImage}\n            openModal={openModal}\n          />\n        </div>\n        <div className=\"home-favorite\">\n          <div className=\"home-favorite--title\">\n            あなたのお気に入り\n          </div>\n          <FavoriteList\n            catInfo={catInfo}\n            openModal={openModal}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n",["78","79"],"/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/views/pages/Find.jsx",["80","81","82","83","84","85","86","87"],"import { React, useState, useEffect } from 'react';\nimport serch from '../../img/serch.svg';\nimport '../../style/App.scss';\nimport Modal from 'react-modal';\nimport close from '../../img/ico_close.svg';\nimport star from '../../img/star.svg';\nimport API from '../../api'\n\n\nconst customStyles = {\n  content: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    padding: '40px',\n    marginRight: '-50%',\n    height: '80%',\n    width: '64%',\n    transform: 'translate(-50%, -50%)',\n  },\n  overlay: {\n    backgroundColor: \"rgba(0,0,0,0.5)\"\n  }\n};\n\nfunction FindList(props) {\n  // console.log('check1', props.searchCat);\n  const searchCatList = !props.searchCat\n  ? []\n  : props.searchCat.map((catList) => <SearchItem catList={catList} openModal={props.openModal}/>)\n  \n  // console.log('check2', props.searchCat);\n  return (\n    <div className=\"find-list\">\n      {!props.searchCat\n        ? (\n          <div className=\"find-list--serch\">\n            <img className=\"find-list--img\" src={serch} />\n            <div className=\"find-list--text\">\n              あなたの気に入るねこを探してみよう\n        </div>\n          </div>\n        )\n        : (\n          <div className=\"find-list--serch\">\n            <div className=\"home-favorite--list\">\n              {searchCatList}\n            </div>\n          </div>\n        )\n      }\n    </div>\n  )\n}\n  \nfunction SearchItem(props) {\n  const cat = props.catList;\n  console.log('image', cat)\n\n  // console.log('itemtest',catList);\n\n  // const formattedDate = formatDate(cat.date);\n\n  return (\n    <div className=\"home-favorite--icon\" onClick={() => { props.openModal(cat) }}>\n      <img className=\"home-favorite--img\" src={cat} />\n    </div >\n  )\n}\n\nfunction formatDate(date) {\n  const year = date.getFullYear();\n  const month = date.getMonth() + 1;\n  const day = date.getDate();\n  const hours = date.getHours();\n  const minutes =date.getMinutes();\n\n  return `${year}/${month}/${day} ${hours}:${minutes}`\n}\n\nfunction ModalItem(props) {\n  const cat = props.cat\n  return (\n    <div className=\"home-modal--item\">\n      {cat.date\n        ? (\n          <>\n            <div className=\"home-modal--favorite\">\n              <div className=\"home-modal--favorite--text\">\n                お気に入り登録日\n                    </div>\n              <div className=\"home-modal--favorite--date\">\n                { formatDate(cat.date)}\n              </div>\n            </div>\n            <div className=\"home-modal--button\" onClick={props.removeFavorite}>\n              <div className=\"home-modal--icon\">\n                <div className=\"home-modal--removebutton\">\n                  <img className=\"home-modal--favoriteimg\" src={star} />\n                  <div className=\"home-modal--text\" >お気に入りからはずす</div>\n                </div>\n              </div>\n            </div>\n          </>\n        )\n        : (\n          <div className=\"home-modal--button\" onClick={props.saveFavorite}>\n            <div className=\"home-modal--icon\">\n              <div className=\"home-modal--favoritebutton\">\n                <img className=\"home-modal--favoriteimg\" src={star} />\n                <div className=\"home-modal--text\" >お気に入りに追加する</div>\n              </div>\n            </div> \n          </div>\n        )\n      }\n    </div>\n  )\n}\n\nfunction Find() {\n  const [recommendationImage, setRecommendationImage] = useState('');\n  const [catInfo, setCatInfo] = useState(undefined);\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [modalCat, setModalCat] = useState({});\n  const [searchCat, setSearchCat] = useState(undefined);\n\n  async function getCatImagesWithKeyword() {\n    let keyword = document.getElementsByClassName('find-serch--input');\n\n    console.log(keyword[0].value);\n\n    const getSearchCat = await API.getCatImagesWithKeyword(10, keyword[0].value);\n    console.log(searchCat);\n    setSearchCat(getSearchCat);\n  }\n\n  function openModal(cat) {\n    setIsOpen(true);\n    setModalCat(cat);\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n    setModalCat({});\n  }\n\n  function saveFavorite() {\n\n    if (!catInfo) {\n      return;\n    };\n    console.log(\"お気に入り追加\")\n    const newCatInfo = catInfo.concat([{\n      image: recommendationImage,\n      date: new Date()\n    }])\n\n    setCatInfo(newCatInfo);\n\n    API.saveCatData(newCatInfo);\n\n    closeModal();\n  }\n\n  function removeFavorite() {\n    const cat = {\n      date: modalCat.date\n    }\n\n    const filtered_cat = catInfo.filter(v => v.date.getTime() !== cat.date.getTime());\n    \n    setCatInfo(filtered_cat);\n\n    API.saveCatData(filtered_cat);\n\n    closeModal();\n  }\n\n  return (\n    <div className=\"find-main\">\n      <div>\n        <Modal\n          isOpen={modalIsOpen}\n          onRequestClose={closeModal}\n          style={customStyles}\n          contentLabel=\"Example Modal\"\n        >\n          <div className=\"home-modal--back\" onClick={closeModal}>\n            <img src={close} />\n          </div>\n          <div className=\"home-modal--img\">\n            <img className=\"home-modal--cat\" src={modalCat.image} />\n          </div>\n          <ModalItem\n            saveFavorite={saveFavorite}\n            removeFavorite={removeFavorite}\n            closeModal={closeModal}\n            cat={modalCat}\n          />\n        </Modal>\n      </div>\n\n      <div className=\"find-content\">\n        <div className=\"find-main--title\">\n          ねこをさがす\n        </div>\n        <div className=\"find-serch\">\n          <input className=\"find-serch--input\" placeholder=\"キーワード\" />\n          <button className=\"find-serch--button\" onClick={getCatImagesWithKeyword} >さがす</button>\n        </div>\n        <div className=\"find-line\" />\n        <FindList\n          searchCat={searchCat}\n          openModal={openModal}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Find;\n","/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/App.jsx",["88","89","90","91","92","93","94"],"/Users/yaguchitakuya/Repositories/react_your_fav_cat/src/App.tsx",["95"],"import React from 'react';\nimport './style/App.scss';\nimport Navigation from './Navigation';\nimport Home from './views/pages/Home.jsx';\nimport Find from './views/pages/Find';\nimport Modal from './views/pages/Modal';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Route path=\"/\" component={Navigation} />\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/find\" exact component={Find} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":3,"column":19,"nodeType":"102","messageId":"103","endLine":3,"endColumn":23},{"ruleId":"104","severity":1,"message":"105","line":13,"column":13,"nodeType":"106","endLine":13,"endColumn":32},{"ruleId":"104","severity":1,"message":"105","line":16,"column":13,"nodeType":"106","endLine":16,"endColumn":58},{"ruleId":"104","severity":1,"message":"105","line":21,"column":17,"nodeType":"106","endLine":21,"endColumn":71},{"ruleId":"96","replacedBy":"107"},{"ruleId":"98","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":81,"column":1,"nodeType":"111","endLine":86,"endColumn":3},{"ruleId":"96","replacedBy":"112"},{"ruleId":"98","replacedBy":"113"},{"ruleId":"104","severity":1,"message":"105","line":47,"column":7,"nodeType":"106","endLine":47,"endColumn":61},{"ruleId":"104","severity":1,"message":"105","line":63,"column":7,"nodeType":"106","endLine":63,"endColumn":62},{"ruleId":"104","severity":1,"message":"105","line":65,"column":9,"nodeType":"106","endLine":65,"endColumn":59},{"ruleId":"104","severity":1,"message":"105","line":99,"column":19,"nodeType":"106","endLine":99,"endColumn":73},{"ruleId":"104","severity":1,"message":"105","line":110,"column":17,"nodeType":"106","endLine":110,"endColumn":71},{"ruleId":"114","severity":2,"message":"115","line":168,"column":5,"nodeType":"102","messageId":"116","endLine":168,"endColumn":15},{"ruleId":"114","severity":2,"message":"115","line":182,"column":5,"nodeType":"102","messageId":"116","endLine":182,"endColumn":15},{"ruleId":"114","severity":2,"message":"115","line":190,"column":27,"nodeType":"102","messageId":"116","endLine":190,"endColumn":37},{"ruleId":"114","severity":2,"message":"115","line":194,"column":54,"nodeType":"102","messageId":"116","endLine":194,"endColumn":64},{"ruleId":"104","severity":1,"message":"105","line":195,"column":13,"nodeType":"106","endLine":195,"endColumn":32},{"ruleId":"104","severity":1,"message":"105","line":198,"column":13,"nodeType":"106","endLine":198,"endColumn":69},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"117","severity":1,"message":"118","line":1,"column":27,"nodeType":"102","messageId":"103","endLine":1,"endColumn":36},{"ruleId":"104","severity":1,"message":"105","line":41,"column":13,"nodeType":"106","endLine":41,"endColumn":59},{"ruleId":"104","severity":1,"message":"105","line":69,"column":7,"nodeType":"106","endLine":69,"endColumn":55},{"ruleId":"104","severity":1,"message":"105","line":102,"column":19,"nodeType":"106","endLine":102,"endColumn":73},{"ruleId":"104","severity":1,"message":"105","line":113,"column":17,"nodeType":"106","endLine":113,"endColumn":71},{"ruleId":"117","severity":1,"message":"119","line":125,"column":31,"nodeType":"102","messageId":"103","endLine":125,"endColumn":53},{"ruleId":"104","severity":1,"message":"105","line":193,"column":13,"nodeType":"106","endLine":193,"endColumn":32},{"ruleId":"104","severity":1,"message":"105","line":196,"column":13,"nodeType":"106","endLine":196,"endColumn":69},{"ruleId":"117","severity":1,"message":"118","line":11,"column":20,"nodeType":"102","messageId":"103","endLine":11,"endColumn":29},{"ruleId":"104","severity":1,"message":"105","line":61,"column":19,"nodeType":"106","endLine":61,"endColumn":73},{"ruleId":"104","severity":1,"message":"105","line":72,"column":17,"nodeType":"106","endLine":72,"endColumn":71},{"ruleId":"117","severity":1,"message":"119","line":84,"column":31,"nodeType":"102","messageId":"103","endLine":84,"endColumn":53},{"ruleId":"117","severity":1,"message":"120","line":89,"column":12,"nodeType":"102","messageId":"103","endLine":89,"endColumn":21},{"ruleId":"104","severity":1,"message":"105","line":140,"column":11,"nodeType":"106","endLine":140,"endColumn":30},{"ruleId":"104","severity":1,"message":"105","line":143,"column":11,"nodeType":"106","endLine":143,"endColumn":67},{"ruleId":"100","severity":1,"message":"121","line":6,"column":8,"nodeType":"102","messageId":"103","endLine":6,"endColumn":13},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["122"],["123"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["122"],["123"],"no-undef","'closeModal' is not defined.","undef","no-unused-vars","'useEffect' is defined but never used.","'setRecommendationImage' is assigned a value but never used.","'openModal' is defined but never used.","'Modal' is defined but never used.","no-global-assign","no-unsafe-negation"]